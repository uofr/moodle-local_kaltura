{"version":3,"sources":["../src/modal_kaltura_progress.js"],"names":["SELECTORS","PROGRESS_BAR","ModalKalturaProgress","root","e","progress","parseInt","loaded","total","css","width","text","Modal","registered","ModalRegistry","register","getType"],"mappings":"wMAuBA,OAEA,OACA,O,8vCAEMA,CAAAA,CAAS,CAAG,CACdC,YAAY,CAAE,qBADA,C,CASGC,C,oBAMjB,WAAYC,CAAZ,CAAkB,wCACRA,CADQ,EAEjB,C,0EAMwB,CACxB,C,0DAMgBC,C,CAAG,CAChB,GAAMC,CAAAA,CAAQ,CAAGC,QAAQ,CAAsB,GAArB,EAAAF,CAAC,CAACG,MAAF,CAAWH,CAAC,CAACI,KAAb,CAAD,CAAzB,CACA,cAAER,CAAS,CAACC,YAAZ,EAA0BQ,GAA1B,CAA8B,CAACC,KAAK,CAAEL,CAAQ,CAAG,GAAnB,CAA9B,EACA,cAAEL,CAAS,CAACC,YAAZ,EAA0BU,IAA1B,CAA+BN,CAAQ,CAAG,GAA1C,CACH,C,2CAMgB,CACb,MAAO,sCACV,C,cAjC6CO,S,cAqClD,GAAIC,CAAAA,CAAU,GAAd,CACA,GAAI,CAACA,CAAL,CAAiB,CACbC,UAAcC,QAAd,CAAuBb,CAAoB,CAACc,OAArB,EAAvB,CAAuDd,CAAvD,CAA6E,sCAA7E,EACAW,CAAU,GACb,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Modal for displaying kaltura upload progress.\n *\n * @module local_kaltura/modal_kaltura_progress\n * @package local_kaltura\n * @author John Lane\n */\n\nimport $ from 'jquery';\n\nimport Modal from 'core/modal';\nimport ModalRegistry from 'core/modal_registry';\n\nconst SELECTORS = {\n    PROGRESS_BAR: '#modal_progress_bar',\n};\n\n/**\n * Kaltura progress modal class.\n *\n * @class ModalKalutraProgress\n */\nexport default class ModalKalturaProgress extends Modal {\n\n    /**\n     * Constructor.\n     * @param {String} root\n     */\n    constructor(root) {\n        super(root);\n    }\n\n    /**\n     * Event listener setup.\n     * Overridden so the modal can't be closed prematurely.\n     */\n    registerEventListeners() {\n    }\n\n    /**\n     * Progress event callback function. Animates progress bar based on event progress.\n     * @param {Event} e\n     */\n    progressCallback(e) {\n        const progress = parseInt(e.loaded / e.total * 100);\n        $(SELECTORS.PROGRESS_BAR).css({width: progress + '%'});\n        $(SELECTORS.PROGRESS_BAR).text(progress + '%');\n    }\n\n    /**\n     * Returns modal type. Used for creating modal using core/modal_factory.\n     * @returns {String}\n     */\n    static getType() {\n        return 'local_kalutra_modal_kaltura_progress';\n    }\n\n}\n\nlet registered = false;\nif (!registered) {\n    ModalRegistry.register(ModalKalturaProgress.getType(), ModalKalturaProgress, 'local_kaltura/modal_kaltura_progress');\n    registered = true;\n}"],"file":"modal_kaltura_progress.min.js"}